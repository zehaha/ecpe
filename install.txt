For Windows 8, 8.1, or 10

Pre-installation:
1. Make sure that your machine is capable of running OpenCL.
2. Machines capable of running OpenCL are normally those that have graphics card
3. OpenCL is usually included in the recent versions of your graphics card driver

Installation:
1. Download and install the latest version of MinGWPy compiler
2. Go to http://www.lfd.uci.edu/~gohlke/pythonlibs/
3. Download and install numpy, scipy, and pyopencl
4. Go to pypi.python.org/pypi/pytools and download pytools
5. Extract pytools to a destination of choice
6. Open cmd and go to the folder of extracted pytools and enter: python setup.py install

Features:
- Both parallel and sequential implementations can be toggled to accept candidate application vectors 
  as input from users and generated by machines via the source code

How to run:
 - For parallel, open cmd and go to src and enter: python global_par.py
 - For sequential, open cmd and go to src and enter: python global_seq.py
 - Check outputs in outputs/output_par.txt or outputs/output_seq.txt

For Linux (tested using Elementary OS 0.3.2 and Ubuntu 15.10)

1. Install OpenCL
   - This could be done by installing OpenCL SDK.
   - There are many sources for the OpenCL SDK. Here we use the AMD source.
   - Download AMD APP from http://developer.amd.com/tools-and-sdks/opencl-zone/amd-accelerated-parallel-processing-app-sdk/download-archive/
   - Open terminal and cd to folder containing the downloaded AMD app
   - type:
   		tar zxvf AMD-APP-SDK-v[version]-lnx64.tgz
	 	sudo ./Install-AMD-APP.sh
2. Install Boost, Numpy, and Setuptools
   - sudo apt-get install python-setuptools python-numpy libboost1.55-all-dev
3. Install PyOpenCL
   - sudo apt-get install python-pyopencl

Features:
   Same features with the Windows OS version

How to run:
 - For parallel, open terminal and go to src and enter: python global_par.py
 - For sequential, open terminal and go to src and enter: python global_seq.py
 - Check outputs in outputs/output_par.txt or outputs/output_seq.txt